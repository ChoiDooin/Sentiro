[0mCMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.

[0m
[0mCMake Deprecation Warning at CMakeLists.txt:44 (cmake_policy):
  The OLD behavior for policy CMP0053 will be removed from a future version
  of CMake.

  The cmake-policies(7) manual explains that the OLD behaviors of all
  policies are deprecated and that a policy should be set to OLD only under
  specific short-term circumstances.  Projects should be ported to the NEW
  behavior and not rely on setting a policy to OLD.

[0m
[0mCMake Deprecation Warning at CMakeLists.txt:47 (cmake_policy):
  The OLD behavior for policy CMP0037 will be removed from a future version
  of CMake.

  The cmake-policies(7) manual explains that the OLD behaviors of all
  policies are deprecated and that a policy should be set to OLD only under
  specific short-term circumstances.  Projects should be ported to the NEW
  behavior and not rely on setting a policy to OLD.

[0m
[0mCMake Deprecation Warning at CMakeLists.txt:50 (cmake_policy):
  The OLD behavior for policy CMP0043 will be removed from a future version
  of CMake.

  The cmake-policies(7) manual explains that the OLD behaviors of all
  policies are deprecated and that a policy should be set to OLD only under
  specific short-term circumstances.  Projects should be ported to the NEW
  behavior and not rely on setting a policy to OLD.

[0m
[0mCMake Deprecation Warning at core/CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.

[0m
[0mCMake Deprecation Warning at samples/CMakeLists.txt:2 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.

[0m
[0mCMake Deprecation Warning at cmake/install_package.cmake:101 (cmake_policy):
  The OLD behavior for policy CMP0026 will be removed from a future version
  of CMake.

  The cmake-policies(7) manual explains that the OLD behaviors of all
  policies are deprecated and that a policy should be set to OLD only under
  specific short-term circumstances.  Projects should be ported to the NEW
  behavior and not rely on setting a policy to OLD.
Call Stack (most recent call first):
  CMakeLists.txt:161 (install_package)

[0m
[33mCMake Warning (dev) at cmake/install_package.cmake:191 (install):
  Policy CMP0062 is not set: Disallow install() of export() result.  Run
  "cmake --help-policy CMP0062" for policy details.  Use the cmake_policy
  command to set the policy and suppress this warning.

  The file

    /home/main/main_ws/build/ydlidar_sdk/ydlidar_sdkTargets.cmake

  was generated by the export() command.  It should not be installed with the
  install() command.  Use the install(EXPORT) mechanism instead.  See the
  cmake-packages(7) manual for more.

Call Stack (most recent call first):
  CMakeLists.txt:161 (install_package)
This warning is for project developers.  Use -Wno-dev to suppress it.
[0m
In file included from [01m[K/home/main/main_ws/src/YDLidar-SDK/src/ydlidar_driver.h:49[m[K,
                 from [01m[K/home/main/main_ws/src/YDLidar-SDK/src/CYdLidar.cpp:30[m[K:
[01m[K/home/main/main_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:[m[K In function â€˜[01m[Kbool ydlidar::core::common::ParseLaserDebugInfo(const LaserDebug&, device_info&)[m[Kâ€™:
[01m[K/home/main/main_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:920:67:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Ksprintf[m[Kâ€™ writing a terminating nul past the end of the destination [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-overflow=-Wformat-overflow=]8;;[m[K]
  920 |       sprintf(reinterpret_cast<char *>(value.serialnum + 8), "%08d[01;35m[K"[m[K, Number);
      |                                                                   [01;35m[K^[m[K
[01m[K/home/main/main_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:920:14:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Ksprintf[m[Kâ€™ output 9 bytes into a destination of size 8
  920 |       [01;36m[Ksprintf(reinterpret_cast<char *>(value.serialnum + 8), "%08d", Number)[m[K;
      |       [01;36m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[Kcc1:[m[K [01;35m[Kwarning: [m[Kcommand-line option â€˜[01m[K-std=c++11[m[Kâ€™ is valid for C++/ObjC++ but not for C
[01m[K/home/main/main_ws/src/YDLidar-SDK/samples/lidar_c_api_test.c:[m[K In function â€˜[01m[Kmain[m[Kâ€™:
[01m[K/home/main/main_ws/src/YDLidar-SDK/samples/lidar_c_api_test.c:102:47:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%llu[m[Kâ€™ expects argument of type â€˜[01m[Klong long unsigned int[m[Kâ€™, but argument 3 has type â€˜[01m[Kuint64_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  102 |             fprintf(stdout, "Scan received[[01;35m[K%llu[m[K]: %u ranges is [%f]Hz\n",
      |                                            [01;35m[K~~~^[m[K
      |                                               [01;35m[K|[m[K
      |                                               [01;35m[Klong long unsigned int[m[K
      |                                            [32m[K%lu[m[K
  103 |                     [32m[Kscan.stamp[m[K,
      |                     [32m[K~~~~~~~~~~[m[K                 
      |                         [32m[K|[m[K
      |                         [32m[Kuint64_t {aka long unsigned int}[m[K
[01m[K/home/main/main_ws/src/YDLidar-SDK/samples/etlidar_test.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[K/home/main/main_ws/src/YDLidar-SDK/samples/etlidar_test.cpp:178:41:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%llu[m[Kâ€™ expects argument of type â€˜[01m[Klong long unsigned int[m[Kâ€™, but argument 3 has type â€˜[01m[Kuint64_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  178 |       fprintf(stdout, "Scan received[[01;35m[K%llu[m[K]: %u ranges is [%f]Hz\n",
      |                                      [01;35m[K~~~^[m[K
      |                                         [01;35m[K|[m[K
      |                                         [01;35m[Klong long unsigned int[m[K
      |                                      [32m[K%lu[m[K
  179 |               [32m[Kscan.stamp[m[K,
      |               [32m[K~~~~~~~~~~[m[K                 
      |                    [32m[K|[m[K
      |                    [32m[Kuint64_t {aka long unsigned int}[m[K
[01m[K/home/main/main_ws/src/YDLidar-SDK/samples/ydlidar_test.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[K/home/main/main_ws/src/YDLidar-SDK/samples/ydlidar_test.cpp:262:41:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%llu[m[Kâ€™ expects argument of type â€˜[01m[Klong long unsigned int[m[Kâ€™, but argument 3 has type â€˜[01m[Kuint64_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  262 |       fprintf(stdout, "Scan received[[01;35m[K%llu[m[K]: %u ranges is [%f]Hz\n",
      |                                      [01;35m[K~~~^[m[K
      |                                         [01;35m[K|[m[K
      |                                         [01;35m[Klong long unsigned int[m[K
      |                                      [32m[K%lu[m[K
  263 |               [32m[Kscan.stamp[m[K,
      |               [32m[K~~~~~~~~~~[m[K                 
      |                    [32m[K|[m[K
      |                    [32m[Kuint64_t {aka long unsigned int}[m[K
[01m[K/home/main/main_ws/src/YDLidar-SDK/samples/tof_test.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[K/home/main/main_ws/src/YDLidar-SDK/samples/tof_test.cpp:259:41:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%llu[m[Kâ€™ expects argument of type â€˜[01m[Klong long unsigned int[m[Kâ€™, but argument 3 has type â€˜[01m[Kuint64_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  259 |       fprintf(stdout, "Scan received[[01;35m[K%llu[m[K]: %u ranges is [%f]Hz\n",
      |                                      [01;35m[K~~~^[m[K
      |                                         [01;35m[K|[m[K
      |                                         [01;35m[Klong long unsigned int[m[K
      |                                      [32m[K%lu[m[K
  260 |               [32m[Kscan.stamp[m[K,
      |               [32m[K~~~~~~~~~~[m[K                 
      |                    [32m[K|[m[K
      |                    [32m[Kuint64_t {aka long unsigned int}[m[K
